# Generated by Django 2.2.4 on 2019-08-24 12:15

from django.db import migrations


def create_record_types(apps, schema_editor):
    RecordType = apps.get_model('core', 'RecordType')

    # Transfer
    RecordType.objects.create(
        code="transfer",
        localizations={
            "en": {
                "title": "Transfer",
                "description": "The necessary transfer point in order to get to the another destination",
                "examples": ["bus stop", "station", "airport"]
            },
            "sk": {
                "title": "Prestup",
                "description": "Prestupové miesto (nutná zastávka na ceste kvôli spojom)",
                "examples": ["autobusová zastávka", "stanica", "letisko"]
            }
        }
    )

    # Camping
    RecordType.objects.create(
        code="camping",
        localizations={
            "en": {
                "title": "Camping",
                "description": "Campsite, nightstand or place where you stayed over night with place for a tent.",
                "examples": ["campsite", "camping", "hamak", "cabin"]
            },
            "sk": {
                "title": "Kempovanie",
                "description": "Kempovanie v prírode. Miesto kde bola strávená noc a je tam miesto na stan.",
                "examples": ["kemp", "stanovanie", "hojdacia siet", "salaš"]
            }
        }
    )

    # Interesting place
    RecordType.objects.create(
        code="interesting",
        localizations={
            "en": {
                "title": "Interesting",
                "description": "Something interesting to see",
                "examples": ["seaside", "lake", "fancy house", "interesting bar"]
            },
            "sk": {
                "title": "Zaujímavosť",
                "description": "Zaujímavá budova, miesto alebo oblasť",
                "examples": ["výhľad", "jazero", "srandovný dom", "zaujímavý bar"]
            }
        }
    )

    # Story
    RecordType.objects.create(
        code="story",
        localizations={
            "en": {
                "title": "Story",
                "description": "Storytelling point",
                "examples": ["blog post", "story", "poem", "status"]
            },
            "sk": {
                "title": "Príbeh",
                "description": "Autorský príspevok",
                "examples": ["blogový príspevok", "príbeh", "báseň", "status"]
            }
        }
    )

    # Epic
    RecordType.objects.create(
        code="epic",
        localizations={
            "en": {
                "title": "Epic",
                "description": "Sub-destination or a important part of the adventure.",
                "examples": ["mountain peek", "national border", "national park"]
            },
            "sk": {
                "title": "Epic",
                "description": "Čiastočný cieľ výletu alebo jeho doležitá časť, prípade aktivita.",
                "examples": ["horský vrch", "štátna hranica", "národny park"]
            }
        }
    )

    # Activity
    RecordType.objects.create(
        code="activity",
        localizations={
            "en": {
                "title": "Activity",
                "description": "Activity of any kind",
                "examples": ["ping pong", "zip-line", "climbing"]
            },
            "sk": {
                "title": "Aktivita",
                "description": "Telesná aktivita akéhokoľvek typu",
                "examples": ["ping pong", "zip-line", "horolezectvo"]
            }
        }
    )

    # Culture
    RecordType.objects.create(
        code="culture",
        localizations={
            "en": {
                "title": "Culture",
                "description": "Cultural activity or any cultural event",
                "examples": ["museum", "gallery", "concert", "wedding"]
            },
            "sk": {
                "title": "Kultúra",
                "description": "Kultúrna udalosť alebo aktivita",
                "examples": ["múzeum", "galéria", "koncert", "svadba"]
            }
        }
    )


class Migration(migrations.Migration):
    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_record_types),
    ]
